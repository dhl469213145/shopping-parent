server:
  port: 18013

spring:
  application:
    name: order

  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.2.4:3306/changgou_order?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: 123456

  redis:
    host: 192.168.2.4
    port: 6379
    password: # Redis服务器地址
    timeout: 5000ms
    lettuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0
    session:
      store-type: redis

  rabbitmq:
    host: 192.168.2.4
    prot: 5672
    username: dev
    password: 123123
    virtual-host: order
    # 发送者开启 confirm 确认机制
    publisher-confirms: true
    # 发送者开启 return 确认机制
    publisher-returns: true
    # 设置消费端手动 ack
    listener:
      simple:
        acknowledge-mode: auto
    # 是否支持重试
        retry:
          enabled: true
          max-attempts: 5
          max-interval: 5000   # 重试最大间隔时间
          initial-interval: 2000  # 重试初始间隔时间
          multiplier: 2 # 间隔时间乘子，间隔时间*乘子=下一次的间隔时间，最大不能超过设置的最大间隔时间

eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true
feign:
#  hystrix:
#    enabled: true
#    threadpool:
#      default:
        ##并发执行的最大线程数，默认10
#        coreSize: 2000
        ##BlockingQueue的最大队列数
#        maxQueueSize: 200
        ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
#        queueSizeRejectionThreshold: 50
  httpclient:
    enabled: true
  client:
    config:
      default:
        #超时时间默认为5s
        #建立连接所用的时间，适用于网络状况正常的情况下，两端连接所需要的时间
        ConnectTimeOut: 5000
        #指建立连接后从服务端读取到可用资源所用的时间
        ReadTimeOut: 5000
      #调用admin微服务接口配置
#      member-admin:
#        ConnectTimeOut: 10000
#        ReadTimeOut: 5000


# mybatis
mybatis-plus:
  mapper-locations: classpath*:/mapper/**/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: pojo.entity
  #typeEnumsPackage: org.springblade.dashboard.entity.enums
  global-config:
    #刷新mapper 调试神器
#    refresh: ${blade.dev-mode}
    # 关闭MP3.0自带的banner
    banner: false
    db-config:
      #主键类型  "AUTO":数据库ID自增; "NONE":无状态,该类型为未设置主键类型(注解里等于跟随全局,全局里约等于 INPUT); "INPUT":insert前自行set主键值;
      #             "ASSIGN_ID":分配ID(主键类型为Number(Long和Integer)或String)(since 3.3.0),使用接口IdentifierGenerator的方法nextId(默认实现类为DefaultIdentifierGenerator雪花算法);
      #           "ASSIGN_UUID":分配UUID,主键类型为String(since 3.3.0),使用接口IdentifierGenerator的方法nextUUID(默认default方法);
      id-type: AUTO

        #机器 ID 部分(影响雪花ID)
#        workerId: 1
        #数据标识 ID 部分(影响雪花ID)(workerId 和 datacenterId 一起配置才能重新初始化 Sequence)
#        datacenterId: 18
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: 2
      #驼峰下划线转换
      column-underline: true
      # 逻辑删除配置
      # 逻辑删除全局值（1表示已删除，Mybatis Plus的默认配置）
      logic-delete-value: 1
      # 逻辑未删除全局值（0表示未删除，Mybatis Plus的默认配置）
      logic-not-delete-value: 0
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


#登录拦截验证
order:
  auth:
    shouldSkipUrls:
      - /sso/**
      - /home/**
      - /order/feignTest/login

#jwt config
jwt:
  tokenHeader: Authorization #JWT存储的请求头
  secret: mall-member-secret #JWT加解密使用的密钥
  expiration: 604800000 #JWT的超期限时间(60*60*24)
  tokenHead: Bearer #JWT负载中拿到开头